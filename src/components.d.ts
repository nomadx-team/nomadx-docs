/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';

import {
  MatchResults,
} from '@stencil/router';

declare global {

  namespace StencilComponents {
    interface AppFooter {

    }
  }

  interface HTMLAppFooterElement extends StencilComponents.AppFooter, HTMLStencilElement {}

  var HTMLAppFooterElement: {
    prototype: HTMLAppFooterElement;
    new (): HTMLAppFooterElement;
  };
  interface HTMLElementTagNameMap {
    'app-footer': HTMLAppFooterElement;
  }
  interface ElementTagNameMap {
    'app-footer': HTMLAppFooterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-footer': JSXElements.AppFooterAttributes;
    }
  }
  namespace JSXElements {
    export interface AppFooterAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHeroContent {

    }
  }

  interface HTMLAppHeroContentElement extends StencilComponents.AppHeroContent, HTMLStencilElement {}

  var HTMLAppHeroContentElement: {
    prototype: HTMLAppHeroContentElement;
    new (): HTMLAppHeroContentElement;
  };
  interface HTMLElementTagNameMap {
    'app-hero-content': HTMLAppHeroContentElement;
  }
  interface ElementTagNameMap {
    'app-hero-content': HTMLAppHeroContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-hero-content': JSXElements.AppHeroContentAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeroContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHero {

    }
  }

  interface HTMLAppHeroElement extends StencilComponents.AppHero, HTMLStencilElement {}

  var HTMLAppHeroElement: {
    prototype: HTMLAppHeroElement;
    new (): HTMLAppHeroElement;
  };
  interface HTMLElementTagNameMap {
    'app-hero': HTMLAppHeroElement;
  }
  interface ElementTagNameMap {
    'app-hero': HTMLAppHeroElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-hero': JSXElements.AppHeroAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHeroAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppNav {

    }
  }

  interface HTMLAppNavElement extends StencilComponents.AppNav, HTMLStencilElement {}

  var HTMLAppNavElement: {
    prototype: HTMLAppNavElement;
    new (): HTMLAppNavElement;
  };
  interface HTMLElementTagNameMap {
    'app-nav': HTMLAppNavElement;
  }
  interface ElementTagNameMap {
    'app-nav': HTMLAppNavElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-nav': JSXElements.AppNavAttributes;
    }
  }
  namespace JSXElements {
    export interface AppNavAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface ComponentPage {
      'match': MatchResults;
    }
  }

  interface HTMLComponentPageElement extends StencilComponents.ComponentPage, HTMLStencilElement {}

  var HTMLComponentPageElement: {
    prototype: HTMLComponentPageElement;
    new (): HTMLComponentPageElement;
  };
  interface HTMLElementTagNameMap {
    'component-page': HTMLComponentPageElement;
  }
  interface ElementTagNameMap {
    'component-page': HTMLComponentPageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'component-page': JSXElements.ComponentPageAttributes;
    }
  }
  namespace JSXElements {
    export interface ComponentPageAttributes extends HTMLAttributes {
      'match'?: MatchResults;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface HomePageSection {
      'description': string;
      'icon': string;
      'sectionTitle': string;
    }
  }

  interface HTMLHomePageSectionElement extends StencilComponents.HomePageSection, HTMLStencilElement {}

  var HTMLHomePageSectionElement: {
    prototype: HTMLHomePageSectionElement;
    new (): HTMLHomePageSectionElement;
  };
  interface HTMLElementTagNameMap {
    'home-page-section': HTMLHomePageSectionElement;
  }
  interface ElementTagNameMap {
    'home-page-section': HTMLHomePageSectionElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'home-page-section': JSXElements.HomePageSectionAttributes;
    }
  }
  namespace JSXElements {
    export interface HomePageSectionAttributes extends HTMLAttributes {
      'description'?: string;
      'icon'?: string;
      'sectionTitle'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface HomePage {

    }
  }

  interface HTMLHomePageElement extends StencilComponents.HomePage, HTMLStencilElement {}

  var HTMLHomePageElement: {
    prototype: HTMLHomePageElement;
    new (): HTMLHomePageElement;
  };
  interface HTMLElementTagNameMap {
    'home-page': HTMLHomePageElement;
  }
  interface ElementTagNameMap {
    'home-page': HTMLHomePageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'home-page': JSXElements.HomePageAttributes;
    }
  }
  namespace JSXElements {
    export interface HomePageAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
